generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model public_Account {
  id                 Int                  @id(map: "Account_pk") @default(autoincrement())
  people_id          Int
  branch             String               @db.VarChar(255)
  account            String               @db.VarChar(255)
  balance            Float                @default(0)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  public_People      public_People        @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Account_fk0")
  public_Card        public_Card[]
  public_Transaction public_Transaction[]

  @@map("public.Account")
}

model public_Card {
  id             Int            @id(map: "Card_pk") @default(autoincrement())
  number         String         @db.VarChar(255)
  type           cardtype
  cvv            String         @db.VarChar(255)
  account_id     Int
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  public_Account public_Account @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Card_fk0")

  @@map("public.Card")
}

model public_People {
  id             Int              @id(map: "People_pk") @default(autoincrement())
  name           String           @db.VarChar(255)
  document       String           @unique @db.VarChar(255)
  password       String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  public_Account public_Account[]

  @@map("public.People")
}

model public_Transaction {
  id             Int             @id(map: "Transaction_pk") @default(autoincrement())
  value          Float
  type           transactiontype
  account_id     Int
  description    String          @db.VarChar(255)
  created_at     DateTime        @default(now()) @db.Timestamp(6)
  updated_at     DateTime        @default(now()) @db.Timestamp(6)
  public_Account public_Account  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Transaction_fk0")

  @@map("public.Transaction")
}

enum cardtype {
  physical
  virtual
}

enum transactiontype {
  debit
  credit
}
